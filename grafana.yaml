# serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-sa
  namespace: grafana  # Replace with your namespace

---

# clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-cluster-monitoring-view
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
- apiGroups: ["route.openshift.io"]
  resources: ["routes"]
  verbs: ["get"]

---
# clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-cluster-monitoring-view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-cluster-monitoring-view
subjects:
- kind: ServiceAccount
  name: grafana-sa
  namespace: grafana  # Replace with your namespace

---

# grafana-instance.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  namespace: grafana  # Replace with your namespace
spec:
  config:
    security:
      admin_user: admin
      admin_password: admin  # Change this in production
    auth:
      disable_login_form: false
    log:
      mode: console
      level: info
  deployment:
    envFrom:
      - secretRef:
          name: grafana-config
    securityContext: {}
  ingress:
    enabled: true
  service:
    name: grafana-service
  serviceAccount:
    name: grafana-sa
  dashboardLabelSelector:
    - matchExpressions:
        - key: app
          operator: In
          values:
            - grafana

---

# grafana-datasource.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: prometheus-grafanadatasource
  namespace: grafana  # Replace with your namespace
spec:
  instanceSelector:
    matchLabels:
      dashboards: grafana
  datasource:
    name: Prometheus
    type: prometheus
    access: proxy
    url: 'https://thanos-querier.openshift-monitoring.svc.cluster.local:9091'
    isDefault: true
    editable: true
    jsonData:
      httpHeaderName1: 'Authorization'
      timeInterval: "5s"
      tlsSkipVerify: true
    secureJsonData:
      httpHeaderValue1: 'Bearer ${SA_TOKEN}'

---

# cluster-monitoring-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-monitoring-config
  namespace: openshift-monitoring
data:
  config.yaml: |
    grafana:
      enabled: true
    telemeterClient:
      enabled: true
    prometheusK8s:
      retention: 15d
      volumeClaimTemplate:
        spec:
          storageClassName: standard
          resources:
            requests:
              storage: 100Gi
    k8sPrometheusAdapter:
      metrics:
        rules:
          default: true
          custom: {}
